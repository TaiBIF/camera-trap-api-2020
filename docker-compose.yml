version: '3'

services:
  redis:
    image: redis:5
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - ../ct-volumes/redis_data:/data
    restart: always
    networks:
      - backend

  mongo:
    image: mongo
    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ../ct-volumes/mongo_data:/data/db
      - ../ct-volumes/bucket:/bucket
    expose:
      - 27017
    ports:
      - "27017:27017"
    networks:
      - backend

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    networks:
      - backend
  server:
    build:
      context: .
      dockerfile: scripts/api/development/Dockerfile
    container_name: ct-api-local-container
    image: ct-api-local-image
    restart: always
    environment:
      - REDIS_HOST=redis
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - /camera-trap-api/node_modules
      - .:/camera-trap-api
      - ../ct-volumes/tmp:/tmp
      #- ./npm-logs:/root/.npm
    ports:
      - 3000:3000
    depends_on:
      - redis
      - mongo
    networks:
      - backend
    #links:
    #  - mongo
networks:
  backend:

